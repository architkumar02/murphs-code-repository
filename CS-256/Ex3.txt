COSC 526 Hwk #3 (Fall 2012)  Due Date: Thursday, Sept 27 (end of class)
What to submit to Blackboard:  Python script file, 5 DT display files, 
performance output file(s) to compare against. The project leader should
submit the files on their Blackboard and indicate in the comment field
who their partner was along with a description of the division of labor.
This assignment is worth 60 points (10 points: documented script file,
10: points accuracy and confusion matrix outputs, 20 points: ReadMe.txt
file explaining how treepredict.py was modified to achieve the best
possible DT for this dataset, 10 points: stopping criteria implemented
and fully explained in the ReadMe.txt file, 10 points: tree display files 
(png,txt) provided and enumerated by the test cases).

You can download the dataset (MovieLens.zip) under the "General
Resources" section of the COSC 526 Course Page on piazza.com.

For your third COSC 526 homework you and your partner will use
the treepredict.py CArt-BASED classifer to predict movie ratings
using the 100K MovieLens data set. You are to modify the Python
script to read each of the 5 (train,test) file pairs denoted by
(u1.base,u1.test), (u2.base,u2.test), etc. and output the accuracy
that your decision tree achieved on each of the 5 training sets.
You should also output the average (arithmetic mean) accuracy achieved
across all 5 test cases.  Your must provide a png or simple ascii
display of each of thet 5 DTs used in your experiment.  We want to
see how different each of the trees are with your code - we do not
to see a static tree used across the 5 test cases.  Each training
set is expected to yield a different DT.  You want to optimize
the code as much as possible to achieve the best average prediction
accuracy across all 5 test cases.

Your output must also include a confusion matrix of the form below
for each of the 5 testcases:

                        Predicted 

       Ratings    | 1 | 2 | 3 | 4 | 5 |  
                 ----------------------
           A    1 |   |   |   |   |   |
           c     ----------------------
           t    2 |   |   |   |   |   |
           u     ----------------------
           a    3 |   |   |   |   |   |
           l     ----------------------
                4 |   |   |   |   |   |
                 ----------------------
                5 |   |   |   |   |   |
                 ----------------------

This matrix is symmetric so you may only show the upper triangular part
if you like.

More information on the MovieLens dataset we are using is provided below.

SUMMARY & USAGE LICENSE
=============================================

MovieLens data sets were collected by the GroupLens Research Project
at the University of Minnesota.
 
This data set consists of:
	* 100,000 ratings (1-5) from 943 users on 1682 movies. 
	* Each user has rated at least 20 movies. 
        * Simple demographic info for the users (age, gender, occupation, zip)

The data was collected through the MovieLens web site
(movielens.umn.edu) during the seven-month period from September 19th, 
1997 through April 22nd, 1998. This data has been cleaned up - users
who had less than 20 ratings or did not have complete demographic
information were removed from this data set. Detailed descriptions of
the data file can be found at the end of this file.

Neither the University of Minnesota nor any of the researchers
involved can guarantee the correctness of the data, its suitability
for any particular purpose, or the validity of results based on the
use of the data set.  The data set may be used for any research
purposes under the following conditions:

     * The user may not state or imply any endorsement from the
       University of Minnesota or the GroupLens Research Group.

     * The user must acknowledge the use of the data set in
       publications resulting from the use of the data set, and must
       send us an electronic or paper copy of those publications.

     * The user may not redistribute the data without separate
       permission.

     * The user may not use this information for any commercial or
       revenue-bearing purposes without first obtaining permission
       from a faculty member of the GroupLens Research Project at the
       University of Minnesota.

If you have any further questions or comments, please contact Jon Herlocker
<herlocke@cs.umn.edu>. 

ACKNOWLEDGEMENTS
==============================================

Thanks to Al Borchers for cleaning up this data and writing the
accompanying scripts.

PUBLISHED WORK THAT HAS USED THIS DATASET
==============================================

Herlocker, J., Konstan, J., Borchers, A., Riedl, J.. An Algorithmic
Framework for Performing Collaborative Filtering. Proceedings of the
1999 Conference on Research and Development in Information
Retrieval. Aug. 1999.

FURTHER INFORMATION ABOUT THE GROUPLENS RESEARCH PROJECT
==============================================

The GroupLens Research Project is a research group in the Department
of Computer Science and Engineering at the University of Minnesota.
Members of the GroupLens Research Project are involved in many
research projects related to the fields of information filtering,
collaborative filtering, and recommender systems. The project is lead
by professors John Riedl and Joseph Konstan. The project began to
explore automated collaborative filtering in 1992, but is most well
known for its world wide trial of an automated collaborative filtering
system for Usenet news in 1996.  The technology developed in the
Usenet trial formed the base for the formation of Net Perceptions,
Inc., which was founded by members of GroupLens Research. Since then
the project has expanded its scope to research overall information
filtering solutions, integrating in content-based methods as well as
improving current collaborative filtering technology.

Further information on the GroupLens Research project, including
research publications, can be found at the following web site:
        
        http://www.grouplens.org/

GroupLens Research currently operates a movie recommender based on
collaborative filtering:

        http://www.movielens.org/

DETAILED DESCRIPTIONS OF DATA FILES (used for the COSC 526 Hwk #3)
==============================================

u.data     -- The full u data set, 100000 ratings by 943 users on 1682 items.
              Each user has rated at least 20 movies.  Users and items are
              numbered consecutively from 1.  The data is randomly
              ordered. This is a tab separated list of 
	         user id | item id | rating | timestamp. 
              The time stamps are unix seconds since 1/1/1970 UTC   

u.info     -- The number of users, items, and ratings in the u data set.

u.item     -- Information about the items (movies); this is a tab separated
              list of
              movie id | movie title | release date | video release date |
              IMDb URL | unknown | Action | Adventure | Animation |
              Children's | Comedy | Crime | Documentary | Drama | Fantasy |
              Film-Noir | Horror | Musical | Mystery | Romance | Sci-Fi |
              Thriller | War | Western |
              The last 19 fields are the genres, a 1 indicates the movie
              is of that genre, a 0 indicates it is not; movies can be in
              several genres at once.
              The movie ids are the ones used in the u.data data set.

u.genre    -- A list of the genres.

u.user     -- Demographic information about the users; this is a tab
              separated list of
              user id | age | gender | occupation | zip code
              The user ids are the ones used in the u.data data set.

u.occupation -- A list of the occupations.

u1.base    -- The data sets u1.base and u1.test through u5.base and u5.test
u1.test       are 80%/20% splits of the u data into training and test data.
u2.base       Each of u1, ..., u5 have disjoint test sets; this if for
u2.test       5 fold cross validation (where you repeat your experiment
u3.base       with each training and test set and average the results).
u3.test       These data sets can be generated from u.data by mku.sh.
u4.base
u4.test
u5.base
u5.test
