%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 767 587
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (\\Client\C$\Desktop\Graph5.eps)
%%CreationDate: Fri Oct 26 17:28:39 2012
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 45/s45 put
Encoding 46/s46 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 53/s53 put
/BoundingBoxes 8 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s45 [0 -434 682 1854] def
/s46 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
end
/Metrics 8 dict def
 Metrics begin
/s32 569 def
/s45 682 def
/s46 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s53 1139 def
end
/CharProcs 8 dict def
CharProcs begin
/.notdef {} def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s46 {
186 0 m
186 205 186 0 186 205 c
391 205 186 205 391 205 c
391 0 391 205 391 0 c
186 0 391 0 186 0 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s53 {
85 384 m
274 400 85 384 274 400 c
288 308 320.5 238.83 371.5 192.5 c
422.5 146.17 484 123 556 123 c
642.67 123 716 155.67 776 221 c
836 286.33 866 373 866 481 c
866 583.67 837.17 664.67 779.5 724 c
721.83 783.33 646.33 813 553 813 c
495 813 442.67 799.83 396 773.5 c
349.33 747.17 312.67 713 286 671 c
117 693 286 671 117 693 c
259 1446 117 693 259 1446 c
988 1446 259 1446 988 1446 c
988 1274 988 1446 988 1274 c
403 1274 988 1274 403 1274 c
324 880 403 1274 324 880 c
412 941.33 504.33 972 601 972 c
729 972 837 927.67 925 839 c
1013 750.33 1057 636.33 1057 497 c
1057 364.33 1018.33 249.67 941 153 c
847 34.33 718.67 -25 556 -25 c
422.67 -25 313.83 12.33 229.5 87 c
145.17 161.67 97 260.67 85 384 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 89/s89 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s89 [0 -434 1366 1854] def
end
/Metrics 3 dict def
 Metrics begin
/s32 569 def
/s89 1366 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s89 {
571 0 m
571 621 571 0 571 621 c
6 1466 571 621 6 1466 c
242 1466 6 1466 242 1466 c
531 1024 242 1466 531 1024 c
584.33 941.33 634 858.67 680 776 c
724 852.67 777.33 939 840 1035 c
1124 1466 840 1035 1124 1466 c
1350 1466 1124 1466 1350 1466 c
765 621 1350 1466 765 621 c
765 0 765 621 765 0 c
571 0 765 0 571 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC3_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 80/s80 put
Encoding 84/s84 put
Encoding 88/s88 put
Encoding 99/s99 put
Encoding 100/s100 put
Encoding 101/s101 put
Encoding 105/s105 put
Encoding 114/s114 put
Encoding 116/s116 put
/BoundingBoxes 11 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s80 [0 -434 1366 1854] def
/s84 [0 -434 1251 1854] def
/s88 [0 -434 1366 1854] def
/s99 [0 -434 1024 1854] def
/s100 [0 -434 1139 1854] def
/s101 [0 -434 1139 1854] def
/s105 [0 -434 455 1854] def
/s114 [0 -434 682 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 11 dict def
 Metrics begin
/s32 569 def
/s80 1366 def
/s84 1251 def
/s88 1366 def
/s99 1024 def
/s100 1139 def
/s101 1139 def
/s105 455 def
/s114 682 def
/s116 569 def
end
/CharProcs 11 dict def
CharProcs begin
/.notdef {} def
/s80 {
158 0 m
158 1466 158 0 158 1466 c
711 1466 158 1466 711 1466 c
808.33 1466 882.67 1461.33 934 1452 c
1006 1440 1066.33 1417.17 1115 1383.5 c
1163.67 1349.83 1202.83 1302.67 1232.5 1242 c
1262.17 1181.33 1277 1114.67 1277 1042 c
1277 917.33 1237.33 811.83 1158 725.5 c
1078.67 639.17 935.33 596 728 596 c
352 596 728 596 352 596 c
352 0 352 596 352 0 c
158 0 352 0 158 0 c
closepath 352 769 m
731 769 352 769 731 769 c
856.33 769 945.33 792.33 998 839 c
1050.67 885.67 1077 951.33 1077 1036 c
1077 1097.33 1061.5 1149.83 1030.5 1193.5 c
999.5 1237.17 958.67 1266 908 1280 c
875.33 1288.67 815 1293 727 1293 c
352 1293 727 1293 352 1293 c
352 769 352 1293 352 769 c
closepath } bind def
/s84 {
531 0 m
531 1293 531 0 531 1293 c
48 1293 531 1293 48 1293 c
48 1466 48 1293 48 1466 c
1210 1466 48 1466 1210 1466 c
1210 1293 1210 1466 1210 1293 c
725 1293 1210 1293 725 1293 c
725 0 725 1293 725 0 c
531 0 725 0 531 0 c
closepath } bind def
/s88 {
9 0 m
576 764 9 0 576 764 c
76 1466 576 764 76 1466 c
307 1466 76 1466 307 1466 c
573 1090 307 1466 573 1090 c
628.33 1012 667.67 952 691 910 c
723.67 963.33 762.33 1019 807 1077 c
1102 1466 807 1077 1102 1466 c
1313 1466 1102 1466 1313 1466 c
798 775 1313 1466 798 775 c
1353 0 798 775 1353 0 c
1113 0 1353 0 1113 0 c
744 523 1113 0 744 523 c
723.33 553 702 585.67 680 621 c
647.33 567.67 624 531 610 511 c
242 0 610 511 242 0 c
9 0 242 0 9 0 c
closepath } bind def
/s99 {
828 389 m
1005 366 828 389 1005 366 c
985.67 244 936.17 148.5 856.5 79.5 c
776.83 10.5 679 -24 563 -24 c
417.67 -24 300.83 23.5 212.5 118.5 c
124.17 213.5 80 349.67 80 527 c
80 641.67 99 742 137 828 c
175 914 232.83 978.5 310.5 1021.5 c
388.17 1064.5 472.67 1086 564 1086 c
679.33 1086 773.67 1056.83 847 998.5 c
920.33 940.17 967.33 857.33 988 750 c
813 723 988 750 813 723 c
796.33 794.33 766.83 848 724.5 884 c
682.17 920 631 938 571 938 c
480.33 938 406.67 905.5 350 840.5 c
293.33 775.5 265 672.67 265 532 c
265 389.33 292.33 285.67 347 221 c
401.67 156.33 473 124 561 124 c
631.67 124 690.67 145.67 738 189 c
785.33 232.33 815.33 299 828 389 c
closepath } bind def
/s100 {
824 0 m
824 134 824 0 824 134 c
756.67 28.67 657.67 -24 527 -24 c
442.33 -24 364.5 -0.67 293.5 46 c
222.5 92.67 167.5 157.83 128.5 241.5 c
89.5 325.17 70 421.33 70 530 c
70 636 87.67 732.17 123 818.5 c
158.33 904.83 211.33 971 282 1017 c
352.67 1063 431.67 1086 519 1086 c
583 1086 640 1072.5 690 1045.5 c
740 1018.5 780.67 983.33 812 940 c
812 1466 812 940 812 1466 c
991 1466 812 1466 991 1466 c
991 0 991 1466 991 0 c
824 0 991 0 824 0 c
closepath 255 530 m
255 394 283.67 292.33 341 225 c
398.33 157.67 466 124 544 124 c
622.67 124 689.5 156.17 744.5 220.5 c
799.5 284.83 827 383 827 515 c
827 660.33 799 767 743 835 c
687 903 618 937 536 937 c
456 937 389.17 904.33 335.5 839 c
281.83 773.67 255 670.67 255 530 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 767 586.09 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.254087 0.254195 sc

/initmtx mtx cmtx def
[0.944513 -0 0 -0.944181 0 2305.67] concat
gs
gs
1 -1 sc
/MC1_Arial 75 self 538 -2152 m
(-5)[25 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 1278 -2152 m
(0)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 2004 -2152 m
(5)[42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 2710 -2152 m
(10)[42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 385 -1959 m
(-2.0)[25 42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 385 -1764 m
(-1.5)[25 42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 385 -1569 m
(-1.0)[25 42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 385 -1374 m
(-0.5)[25 42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 410 -1180 m
(0.0)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 410 -985 m
(0.5)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 410 -790 m
(1.0)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 410 -595 m
(1.5)[42 21 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 410 -400 m
(2.0)[42 21 42 ] xs
1 -1 sc
gr
572 2070 m
572 2036 l
7 sw
1 sj
1 scap
st
935 2053 m
935 2036 l
st
1299 2070 m
1299 2036 l
st
1662 2053 m
1662 2036 l
st
2025 2070 m
2025 2036 l
st
2389 2053 m
2389 2036 l
st
2752 2070 m
2752 2036 l
st
572 2036 m
2752 2036 l
st
555 2036 m
572 2036 l
st
538 1939 m
572 1939 l
st
555 1841 m
572 1841 l
st
538 1744 m
572 1744 l
st
555 1646 m
572 1646 l
st
538 1549 m
572 1549 l
st
555 1452 m
572 1452 l
st
538 1354 m
572 1354 l
st
555 1257 m
572 1257 l
st
538 1160 m
572 1160 l
st
555 1062 m
572 1062 l
st
538 965 m
572 965 l
st
555 867 m
572 867 l
st
538 770 m
572 770 l
st
555 673 m
572 673 l
st
538 575 m
572 575 l
st
555 478 m
572 478 l
st
538 380 m
572 380 l
st
555 283 m
572 283 l
st
572 2036 m
572 283 l
st
gs
pathproc 572 283 2181 1754 np rectpath
/eocl cland
np exec
863 1766 m
863 1766 m
877 1631 l
892 1500 l
906 1412 l
921 1378 l
935 1375 l
950 1368 l
964 1339 l
979 1293 l
993 1250 l
1008 1226 l
1023 1221 l
1037 1219 l
1052 1204 l
1066 1171 l
1081 1133 l
1095 1107 l
1110 1098 l
1124 1097 l
1139 1086 l
1153 1053 l
1168 1006 l
1182 965 l
1197 946 l
1211 944 l
1226 932 l
1241 877 l
1255 768 l
1270 629 l
1284 510 l
1299 463 l
1313 510 l
1328 629 l
1342 768 l
1357 877 l
1371 932 l
1386 944 l
1400 946 l
1415 965 l
1429 1006 l
1444 1053 l
1459 1086 l
1473 1097 l
1488 1098 l
1502 1107 l
1517 1133 l
1531 1171 l
1546 1204 l
1560 1219 l
1575 1221 l
1589 1226 l
1604 1250 l
1618 1293 l
1633 1339 l
1647 1368 l
1662 1375 l
1677 1378 l
1691 1412 l
1706 1500 l
1720 1631 l
1735 1766 l
1749 1847 l
1764 1839 l
1778 1745 l
1793 1607 l
1807 1481 l
1822 1403 l
1836 1376 l
1851 1374 l
1865 1364 l
1880 1332 l
1895 1285 l
1909 1244 l
1924 1224 l
1938 1221 l
1953 1218 l
1967 1199 l
1982 1164 l
1996 1128 l
2011 1104 l
2025 1098 l
2040 1096 l
2054 1082 l
2069 1046 l
2083 998 l
2098 960 l
2113 945 l
2127 944 l
2142 927 l
2156 863 l
2171 746 l
2185 606 l
2200 496 l
2214 465 l
2229 526 l
2243 652 l
2258 790 l
2272 890 l
2287 936 l
2301 944 l
2316 948 l
3 sw
st
gr
gs
pathproc 572 283 2181 1754 np rectpath
/eocl cland
np exec
845 1519 36 36 rectfill
572 283 m
3 sw
845 1519 36 36 rectstroke
859 1512 36 36 rectfill
859 1512 36 36 rectstroke
874 1501 36 36 rectfill
874 1501 36 36 rectstroke
888 1487 36 36 rectfill
888 1487 36 36 rectstroke
903 1469 36 36 rectfill
903 1469 36 36 rectstroke
917 1447 36 36 rectfill
917 1447 36 36 rectstroke
932 1423 36 36 rectfill
932 1423 36 36 rectstroke
946 1396 36 36 rectfill
946 1396 36 36 rectstroke
961 1366 36 36 rectfill
961 1366 36 36 rectstroke
975 1334 36 36 rectfill
975 1334 36 36 rectstroke
990 1300 36 36 rectfill
990 1300 36 36 rectstroke
1005 1265 36 36 rectfill
1005 1265 36 36 rectstroke
1019 1228 36 36 rectfill
1019 1228 36 36 rectstroke
1034 1191 36 36 rectfill
1034 1191 36 36 rectstroke
1048 1153 36 36 rectfill
1048 1153 36 36 rectstroke
1063 1114 36 36 rectfill
1063 1114 36 36 rectstroke
1077 1077 36 36 rectfill
1077 1077 36 36 rectstroke
1092 1039 36 36 rectfill
1092 1039 36 36 rectstroke
1106 1003 36 36 rectfill
1106 1003 36 36 rectstroke
1121 968 36 36 rectfill
1121 968 36 36 rectstroke
1135 935 36 36 rectfill
1135 935 36 36 rectstroke
1150 904 36 36 rectfill
1150 904 36 36 rectstroke
1164 876 36 36 rectfill
1164 876 36 36 rectstroke
1179 850 36 36 rectfill
1179 850 36 36 rectstroke
1193 826 36 36 rectfill
1193 826 36 36 rectstroke
1208 806 36 36 rectfill
1208 806 36 36 rectstroke
1223 790 36 36 rectfill
1223 790 36 36 rectstroke
1237 777 36 36 rectfill
1237 777 36 36 rectstroke
1252 767 36 36 rectfill
1252 767 36 36 rectstroke
1266 762 36 36 rectfill
1266 762 36 36 rectstroke
1281 760 36 36 rectfill
1281 760 36 36 rectstroke
1295 762 36 36 rectfill
1295 762 36 36 rectstroke
1310 767 36 36 rectfill
1310 767 36 36 rectstroke
1324 777 36 36 rectfill
1324 777 36 36 rectstroke
1339 790 36 36 rectfill
1339 790 36 36 rectstroke
1353 806 36 36 rectfill
1353 806 36 36 rectstroke
1368 826 36 36 rectfill
1368 826 36 36 rectstroke
1382 850 36 36 rectfill
1382 850 36 36 rectstroke
1397 876 36 36 rectfill
1397 876 36 36 rectstroke
1411 904 36 36 rectfill
1411 904 36 36 rectstroke
1426 935 36 36 rectfill
1426 935 36 36 rectstroke
1441 968 36 36 rectfill
1441 968 36 36 rectstroke
1455 1003 36 36 rectfill
1455 1003 36 36 rectstroke
1470 1039 36 36 rectfill
1470 1039 36 36 rectstroke
1484 1077 36 36 rectfill
1484 1077 36 36 rectstroke
1499 1114 36 36 rectfill
1499 1114 36 36 rectstroke
1513 1153 36 36 rectfill
1513 1153 36 36 rectstroke
1528 1191 36 36 rectfill
1528 1191 36 36 rectstroke
1542 1228 36 36 rectfill
1542 1228 36 36 rectstroke
1557 1265 36 36 rectfill
1557 1265 36 36 rectstroke
1571 1300 36 36 rectfill
1571 1300 36 36 rectstroke
1586 1334 36 36 rectfill
1586 1334 36 36 rectstroke
1600 1366 36 36 rectfill
1600 1366 36 36 rectstroke
1615 1396 36 36 rectfill
1615 1396 36 36 rectstroke
1629 1423 36 36 rectfill
1629 1423 36 36 rectstroke
1644 1447 36 36 rectfill
1644 1447 36 36 rectstroke
1659 1469 36 36 rectfill
1659 1469 36 36 rectstroke
1673 1487 36 36 rectfill
1673 1487 36 36 rectstroke
1688 1501 36 36 rectfill
1688 1501 36 36 rectstroke
1702 1512 36 36 rectfill
1702 1512 36 36 rectstroke
1717 1519 36 36 rectfill
1717 1519 36 36 rectstroke
1731 1523 36 36 rectfill
1731 1523 36 36 rectstroke
1746 1523 36 36 rectfill
1746 1523 36 36 rectstroke
1760 1518 36 36 rectfill
1760 1518 36 36 rectstroke
1775 1511 36 36 rectfill
1775 1511 36 36 rectstroke
1789 1499 36 36 rectfill
1789 1499 36 36 rectstroke
1804 1484 36 36 rectfill
1804 1484 36 36 rectstroke
1818 1465 36 36 rectfill
1818 1465 36 36 rectstroke
1833 1443 36 36 rectfill
1833 1443 36 36 rectstroke
1847 1419 36 36 rectfill
1847 1419 36 36 rectstroke
1862 1391 36 36 rectfill
1862 1391 36 36 rectstroke
1877 1361 36 36 rectfill
1877 1361 36 36 rectstroke
1891 1329 36 36 rectfill
1891 1329 36 36 rectstroke
1906 1295 36 36 rectfill
1906 1295 36 36 rectstroke
1920 1259 36 36 rectfill
1920 1259 36 36 rectstroke
1935 1222 36 36 rectfill
1935 1222 36 36 rectstroke
1949 1184 36 36 rectfill
1949 1184 36 36 rectstroke
1964 1146 36 36 rectfill
1964 1146 36 36 rectstroke
1978 1108 36 36 rectfill
1978 1108 36 36 rectstroke
1993 1070 36 36 rectfill
1993 1070 36 36 rectstroke
2007 1033 36 36 rectfill
2007 1033 36 36 rectstroke
2022 997 36 36 rectfill
2022 997 36 36 rectstroke
2036 963 36 36 rectfill
2036 963 36 36 rectstroke
2051 930 36 36 rectfill
2051 930 36 36 rectstroke
2065 899 36 36 rectfill
2065 899 36 36 rectstroke
2080 871 36 36 rectfill
2080 871 36 36 rectstroke
2095 845 36 36 rectfill
2095 845 36 36 rectstroke
2109 823 36 36 rectfill
2109 823 36 36 rectstroke
2124 803 36 36 rectfill
2124 803 36 36 rectstroke
2138 787 36 36 rectfill
2138 787 36 36 rectstroke
2153 775 36 36 rectfill
2153 775 36 36 rectstroke
2167 766 36 36 rectfill
2167 766 36 36 rectstroke
2182 761 36 36 rectfill
2182 761 36 36 rectstroke
2196 760 36 36 rectfill
2196 760 36 36 rectstroke
2211 762 36 36 rectfill
2211 762 36 36 rectstroke
2225 769 36 36 rectfill
2225 769 36 36 rectstroke
2240 779 36 36 rectfill
2240 779 36 36 rectstroke
2254 792 36 36 rectfill
2254 792 36 36 rectstroke
2269 810 36 36 rectfill
2269 810 36 36 rectstroke
2283 830 36 36 rectfill
2283 830 36 36 rectstroke
2298 854 36 36 rectfill
2298 854 36 36 rectstroke
gr
gs
gs
1 -1 sc
248 -1242 tr
90 ro
/MC2_Arial 91 self 0 0 m
(Y)[61 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC3_Arial 91 self 1632 -2294 m
(X)[60 ] xs
1 -1 sc
gr
gs
gs
2142 276 36 36 rectfill
572 283 m
3 sw
2142 276 36 36 rectstroke
gr
1 -1 sc
/MC3_Arial 91 self 2261 -324 m
( )[25 ] xs
1 -1 sc
1 -1 sc
2286 -324 m
(Tree Predicted)[57 30 51 51 25 61 30 51 51 20 46 25 51 51 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
