Optimization of the RPM8 based on MCNPX simulation
Author: Matthew J. Urffer

ABOUT:
    This project was started in the begining of Febuary, 2013. It was orginally
intended as a c code to generate the input decks, but this approach was 
abandonded in order to make the input deck more portable. The calling structure
is as follows:

    RUNDATA.sh calls createInputDeck.sh, which uses SCRIPT.mcnp as the base
    RUNDATA.sh copies the contents of queueRunScript.sh into a temp file which
        is then submitted to the job queue
    Data parsing is done with the python script

CHANGELOG:
   2/08/2013 - Started createInputDeck.sh
   2/09/2013 - Finished createInputDeck.sh
   2/13/2013 - Started a python module to create the input decks
                createSurfaceCells.py and mergeInputDecks.py 
   2/15/2013 - Updated README
   2/17/2013 - Fixed the mctal.py so that each tally data as not shared between
                the tally  class. Worked on ParseOutput.py such that it not has
                a summary sheet in which it presents the parameters in the 
                interaction rate, and also the surface flux thermal fraction 
                for each surface (with the distance). Next step is to put into
                Origin and normalize by the number of cells.
FILES:
    README              - this fileE
    RUNDATA.sh          - main driver for running the simulations
    createInputDeck.sh  - creates the input deck based off of SCRIPT.mcnp
    SCRIPT.mcnp         - base of all of the MCNP input decks
    queueRunScript.sh   - base file for jobs submitted to the queue system
    paraseOutput.py     - parses the output mctal files
    createSurfaceCells.py- creates surfaces and cells cards
    mergeInputDecks.py  - meges the output of createSurfacCells.py and SCRIPT
    mctal.py            - Finally a mctal python reader! 

RUN OUTPUT:
    2013-02-09_RunOutput.tgz 
        linear spacing with a front modeterator spacing of 2.5 cm, the number
        of detector layers going from (1 2 3 4), and the spacing between the
        detector assemplies ranging from (1 2 3 4) cm. The interaction rate
        tallies and the surface current tallies were used.
    2014-02-14_RunOutput.tgz
        linear spacing with a front moderator spacing of 2.5 cm, the number of
        detector layers (1 2 3 4 5 6), and the spacing between the detecor 
        assemplies being (1 2 3 4) cm. Each regions was subdivided into 5 mm*
        spacing. The tallies were an F2 flux tally on each surface (as to 
        determine the thermal flux profile) with an F4 with a FM card to 
        determine the interaction rate. 
        
*Pretty sure this is 10 mmm. See 2013-02-15_RunInputs.tgz for the input decks
    which have the spacing between layers of 10 mm.  This was attrbuted to a
    <= instead of a < in createSurfaceCells.py
    
